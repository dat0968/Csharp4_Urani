@using Newtonsoft.Json
@model ASMCshrp4_12345.ViewModels.ComboViewModel

@{
    ViewData["Title"] = "Sửa Combo";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<h2>Sửa Combo</h2>

<form asp-action="Edit" method="post" enctype="multipart/form-data">
    <input type="hidden" asp-for="MaComBo" />

    <div class="form-group">
        <label for="TenComBo">Tên Combo</label>
        <input type="text" class="form-control" asp-for="TenComBo" required />
    </div>

    <div class="form-group">
        <label for="SoLuong">Số Lượng</label>
        <input type="number" class="form-control" asp-for="SoLuong" required />
    </div>
    <!-- Mô tả Combo -->
    
    <!-- Hiển thị ảnh đã có trong combo -->
    @foreach (var item in Model.AnhComBos)
    {
        <div>
            <img src="~/HinhAnh/@item.HinhAnh" width="100" />
            <input type="checkbox" name="HinhAnhToDelete" value="@item.IdAnh" /> Xóa
        </div>
    }
    <div>
        <label for="MoTa">Mô Tả:</label>
        <textarea asp-for="MoTa" class="form-control"></textarea> <!-- Trường nhập mô tả -->
    </div>
    <br />
    <!-- Chọn ảnh mới -->
    <div>
        <label>Chọn ảnh mới:</label>
        <input type="file" name="HinhAnhList" multiple />
    </div>

    

    <!-- Nút mở modal chọn sản phẩm -->
    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#selectProductsModal">
        Chọn Sản Phẩm
    </button>

    <!-- Modal chọn sản phẩm -->
    <div class="modal fade" id="selectProductsModal" tabindex="-1" aria-labelledby="selectProductsModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="selectProductsModalLabel">Danh Sách Sản Phẩm</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th>Chọn</th>
                                <th>Mã Sản Phẩm</th>
                                <th>Tên Sản Phẩm</th>
                                <th>Giá Bán</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var sp in Model.AllSanPhamList)
                            {
                                <tr>
                                    <td>
                                        <button type="button"
                                                class="btn btn-sm btn-success"
                                                onclick="addProduct('@sp.MaSp', '@sp.TenSp', @sp.GiaBan)">
                                            Thêm
                                        </button>
                                    </td>
                                    <td>@sp.MaSp</td>
                                    <td>@sp.TenSp</td>
                                    <td>@sp.GiaBan.ToString("N0") VND</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Bảng hiển thị sản phẩm đã chọn -->
    <h5>Các sản phẩm đã chọn:</h5>
    <table class="table" id="selectedProductsTable">
        <thead>
            <tr>
                <th>Mã Sản Phẩm</th>
                <th>Tên Sản Phẩm</th>
                <th>Số Lượng</th>
                <th>Thành Tiền</th>
                <th>Hành Động</th>
            </tr>
        </thead>
        <tbody>
            <!-- Nội dung sẽ được cập nhật bởi JavaScript -->
        </tbody>
    </table>

    <!-- Hiển thị tổng giá gốc -->
    <h5>Tổng giá gốc: <span id="tongGiaGoc">0</span> VND</h5>

    <!-- Ẩn danh sách sản phẩm đã chọn để gửi về server -->
    <input type="hidden" id="SanPhamList" name="SanPhamList" />

    <div class="form-group">
        <label for="DonGia">Giá Combo</label>
        <input type="number" class="form-control" asp-for="DonGia" required />
    </div>

    <button type="submit" class="btn btn-success mt-3">Lưu</button>
</form>

<script>
    let selectedProducts = @Html.Raw(JsonConvert.SerializeObject(Model.SanPhamList));

    // Thêm sản phẩm vào danh sách
    function addProduct(masp, tensp, giaban) {
        const existingProduct = selectedProducts.find(p => p.MaSp === masp);

        if (!existingProduct) {
            selectedProducts.push({ MaSp: masp, TenSp: tensp, GiaBan: giaban, SoLuong: 1, IsSelected: true });
        } else {
            existingProduct.IsSelected = true;
        }

        // Cập nhật lại bảng sản phẩm đã chọn
        updateSelectedProductsTable();
        // Cập nhật giá trị SanPhamList
        document.getElementById("SanPhamList").value = JSON.stringify(selectedProducts);
    }

    // Xóa sản phẩm khỏi danh sách
    function removeProduct(masp) {
        const productIndex = selectedProducts.findIndex(p => p.MaSp === masp);
        if (productIndex !== -1) {
            selectedProducts.splice(productIndex, 1);
        }
        updateSelectedProductsTable(); 
        document.getElementById("SanPhamList").value = JSON.stringify(selectedProducts);
    }

    // Cập nhật số lượng sản phẩm
    function updateProductQuantity(input, masp) {
        const soLuong = parseInt(input.value) || 1;
        const product = selectedProducts.find(p => p.MaSp === masp);
        if (product) {
            product.SoLuong = soLuong;
        }
        updateSelectedProductsTable();
        // Cập nhật lại giá trị SanPhamList
        document.getElementById("SanPhamList").value = JSON.stringify(selectedProducts);
    }

    // Cập nhật bảng hiển thị sản phẩm đã chọn
    function updateSelectedProductsTable() {
        const tableBody = document.querySelector("#selectedProductsTable tbody");
        tableBody.innerHTML = "";
        let tongGiaGoc = 0;
        selectedProducts.forEach(product => {
            const thanhTien = product.GiaBan * product.SoLuong;
            tongGiaGoc += thanhTien;
            const row = `
                <tr>
                    <td>${product.MaSp}</td>
                    <td>${product.TenSp}</td>
                    <td>
                        <input type="number" class="form-control" value="${product.SoLuong}" min="1"
                               onchange="updateProductQuantity(this, '${product.MaSp}')">
                    </td>
                    <td>${thanhTien.toLocaleString()} VND</td>
                    <td>
                        <button type="button" class="btn btn-danger btn-sm" onclick="removeProduct('${product.MaSp}')">
                            Xóa
                        </button>
                    </td>
                </tr>
            `;
            tableBody.innerHTML += row; 
        });

        // Cập nhật tổng giá gốc
        document.getElementById("tongGiaGoc").innerText = tongGiaGoc.toLocaleString();
        document.getElementById("SanPhamList").value = JSON.stringify(selectedProducts);
    }

    // Cập nhật khi load lại trang
    document.addEventListener("DOMContentLoaded", () => {
        if (selectedProducts.length > 0) {
            updateSelectedProductsTable();
        }
    });
</script>
